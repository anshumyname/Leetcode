typedef tuple<int,int,int> ti;
class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {
        vector<vector<pair<int,int>>> gf(n);
        for(auto f: flights)
            gf[f[0]].push_back({f[1],f[2]});
        priority_queue<ti,vector<ti>,greater<ti>> pq;
        pq.emplace(0,src,K+1);
        while(!pq.empty()){
            auto [cost,u,kk]=pq.top(); pq.pop();
            if(u==dst) return cost;
            if(!kk) continue;
            for(auto nei: gf[u]){
                auto [v,c]=nei;
                pq.emplace(cost+c,v,kk-1);
            }
            
        }
        return -1;
    }
};