/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool flipEquiv(TreeNode* root1, TreeNode* root2) {
        if(root1==NULL and root2==NULL) return true;
        if(!root1 or !root2) return false;
        if(root1->val!=root2->val) return false;
        if((root1->left and root2->right and root1->left->val==root2->right->val) or (root1->right and root2->left and root1->right->val==root2->left->val)){
            auto temp=root1->left;
            root1->left=root1->right;
            root1->right=temp;
            //cout<<root1->left->val;
        }
        
        return flipEquiv(root1->left,root2->left) and flipEquiv(root1->right,root2->right);
    }
};