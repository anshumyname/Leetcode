class Solution {
public:
    //vector<vector<int>> vis(10,vector<int> (10,0));
    vector<vector<int>> combinationSum3(int k, int n,int st=0) {
        vector<vector<int>> vv;
        if(k==0 || n<=0) return {};
        if(k==1 && n<=9)
            return {{n}};
        if((k*(k-1)/2)>n) return {};
        helper(k,n,vv,st);
        return vv;
    }
    
    void helper(int k,int n, vector<vector<int>>& vx,int x){
        for(int i=x+1;i<10;i++){
            
            vector<vector<int>> v=combinationSum3(k-1,n-i,i);
            
            for(auto e: v){
                int xx=0;
                if(find(e.begin(),e.end(),i)!=e.end()) continue;
                for(auto ee: e) 
                    xx+=ee;
                if(xx==(n-i)){
                    e.insert(e.begin(),i);
                    if(e[e.size()-1]>e[e.size()-2])
                        vx.push_back(e);
                }
                
            }
        }
        
    }
};