/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* subtreeWithAllDeepest(TreeNode* root) {
        if(!root) return root;
        return help(root).second;
    }
    
    pair<int,TreeNode*> help(TreeNode* root){
        if(!root) return {0,NULL};
        auto lef= help(root->left);
        auto right= help(root->right);
        
        int h1=lef.first;
        int h2=right.first;
        return {max(h1,h2)+1,
                    (h1==h2)?root:(h1>h2)?lef.second:right.second};
    }
};