class Solution {
public:
    unordered_map<char,int> mp;
    bool reorderedPowerOf2(int N) {
        string s=to_string(N);
        for(auto c :s)
            mp[c]++;
        for(int i=0;i<32;i++){
            int x=(1<<i);
            if(compare(to_string(x)))
                return true;
        }
        return false;
    }
    
    bool compare(string s){
        unordered_map<char,int> mp3;
        for(auto c: s){
            mp3[c]++;
        } 
        for(int i=0;i<10;i++){
            char k=i+'0';
            
            bool x= mp.find(k)==mp.end();
            bool y = mp3.find(k)==mp3.end();
            
            if(x!=y) return false;
            if(!x and !y and mp[k]!=mp3[k]) return false;
        }
        return true;
    }
};