class Solution {
public:
    
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int K) {
        int m=mat.size();
        int n=mat[0].size();
        vector<vector<int>> sum(m+1,vector<int> (n+1,0));
        update(mat,m,n,sum);
        vector<vector<int>> ans(m,vector<int> (n,0));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int r1=max(0,i-K);
                int c1=max(0,j-K);
                int r2=min(m,i+K+1);
                int c2=min(n,j+K+1);
                ans[i][j]=sum[r2][c2]-sum[r1][c2]-sum[r2][c1]+sum[r1][c1];
            }
        }
        return ans;
        
    }
    
    void update(vector<vector<int>>& mat,int m,int n,vector<vector<int>>& v){
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++)
               v[i+1][j+1]=v[i+1][j]+v[i][j+1]-v[i][j]+mat[i][j];
        }
    }
};