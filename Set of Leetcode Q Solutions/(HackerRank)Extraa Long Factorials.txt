#include <bits/stdc++.h>

using namespace std;
string helper(int n);
string addition(string answer,string toadd);
string multiply(string s1,string s2);
pair<string,string> padding(string s1,string s2);

// Complete the extraLongFactorials function below.
void extraLongFactorials(int n) {
    auto s=helper(n);
    cout<<s;
    
}

string helper(int n){
    if(n==1)
        return "1";
    string nii=helper(n-1);
    //cout<<nii<<endl;
    return multiply(to_string(n),nii);
}

string addition(string answer,string toadd){
    if(answer=="")
        return toadd;
    auto p=padding(answer,toadd);
    answer=p.first; toadd=p.second;
   // cout<<answer<<" "<<toadd<<endl;
    int i=0,carry=0,l=toadd.length();
    string added;
    for(int x=l-1;x>=0;x--){
        int sum=carry+(answer[x]-'0')+(toadd[x]-'0');
        carry=sum/10;
        added.insert(0,to_string(sum%10));
    }
    if(carry)
        added.insert(0,to_string(carry));
    int k=0;
    while(added[k]=='0')
        k++;
    added.erase(0,k);
    //cout<<s;
    return added;
}

string multiply(string s1,string s2){
    
    
    string answer;
    auto p=padding(s1,s2);
    s1=p.first; s2=p.second;
    int l=s1.length();
    //cout<<s1<<" "<<s2<<endl;
    for(int j=l-1;j>=0;j--){
        string toadd(l-j-1,'0');
        int carry=0;
       // cout<<"for j "<<j<<endl;
        //if(s1[j]=='0') continue;
        for(int i=l-1;i>=0;i--){
             int ans=carry+(s1[i]-'0')*(s2[j]-'0');
             carry=ans/10;
             toadd.insert(0,to_string(ans%10));   
        }
        //cout<<answer<<"||"<<toadd<<endl; 
        if(carry)
            toadd.insert(0,to_string(carry));
            
        answer=addition(answer,toadd);
    
    }
    return answer;
}

pair<string,string> padding(string s1,string s2){
    int diff=s1.length()-s2.length();
    string zeros(abs(diff),'0');
    s1= (diff>0?"":zeros)+s1;
    s2= (diff>0?zeros:"")+s2;
    return {s1,s2};
}

int main()
{
    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    extraLongFactorials(n);

    return 0;
}


