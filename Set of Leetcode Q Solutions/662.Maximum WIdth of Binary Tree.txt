/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        TreeNode* temp=root;
        queue<pair<TreeNode*,int>> q;
        q.push({root,1});
        int maxlen=0;
        
        while(!q.empty()){
            int sz=q.size();
            auto mm=q.front().second; 
            int fir,sec;
            for(int i=0;i<sz;i++){
                auto temp=q.front(); q.pop();
                int curid=temp.second-mm;
                if(!i){ fir=curid;}
                if(i==sz-1){ sec=curid;}
                if(temp.first->left)  q.push({temp.first->left,2*curid});
                if(temp.first->right) q.push({temp.first->right,2*curid+1});
                
            }
            
            maxlen=max(maxlen,sec-fir+1);
            
    }
        return maxlen;
    }
        
    
    
  
};