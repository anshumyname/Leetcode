class NumMatrix {
public:
    vector<vector<int>> v;
    NumMatrix(vector<vector<int>>& matrix) {
        v=matrix;
        int m=matrix.size();
        int n=0;
        if(m) n=matrix[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++)
                v[i][j]=(j==0?v[i][j]:v[i][j]+v[i][j-1]);
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++)
                v[j][i]=(j==0?v[j][i]:v[j-1][i]+v[j][i]);
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int nr=row1-1;
        int nc=col1-1;
        int tosub=0;
        if(nr!=-1)
            tosub+=v[nr][col2];
        if(nc!=-1)
            tosub+=v[row2][nc];
        if(nr!=-1 && nc!=-1)
            tosub-=v[nr][nc];
        return v[row2][col2]-tosub;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */