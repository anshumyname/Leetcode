class Solution {
public:
    int m,n;
    int numSubmat(vector<vector<int>>& matrix) {
        m=matrix.size();
        n=0;
        if(m) n=matrix[0].size();
        vector<vector<int>> pr(m,vector<int> (n,0));
        sumRegion(matrix,pr);
        int ans=0;
        for(int j=0;j<n;j++){
            stack<pair<int,int>> q;
            int i=m-1;
            int sum=0;
            while(i>=0){
                int c=0;
                while(!q.empty() && q.top().first>pr[i][j]){
                    sum-=(q.top().second+1)*(q.top().first-pr[i][j]);
                    c+=q.top().second+1;
                    q.pop();
                }
                
                sum+=pr[i][j];
                ans+=sum;
                q.push({pr[i][j],c});
                i--;
            }
        }
        return ans;
        
    }
    
     void sumRegion(vector<vector<int>>& v,vector<vector<int>>& p) {
        for(int i=0;i<m;i++){
            for(int j=n-1;j>=0;j--){
                if(!v[i][j]) continue;
                if(j!=n-1) 
                    p[i][j]+=p[i][j+1];
                p[i][j]+=v[i][j];
            }
        }
    }
};