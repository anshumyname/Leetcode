class Solution {
public:
    int n,m;
    int maxSideLength(vector<vector<int>>& mat, int threshold) {
        m=mat.size();
        if(!m) return 0;
        n=mat[0].size();
        int l=min(n,m);
        vector<vector<int>> pre(m,vector<int> (n,0));
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                pre[i][j]= j>0?pre[i][j-1]+mat[i][j]:mat[i][j];
        for(int j=0;j<n;j++)
            for(int i=0;i<m;i++)
                pre[i][j]=i>0?pre[i-1][j]+pre[i][j]:pre[i][j];
        
        for(int k=l;k>=1;k--){
            for(int i=0;i+k-1<m;i++){
                for(int j=0;j+k-1<n;j++){
                    int sum=pre[i+k-1][j+k-1];
                    sum-=(j>0?pre[i+k-1][j-1]:0);
                    sum-=(i>0?pre[i-1][j+k-1]:0);
                    sum+=(i>0 && j>0?pre[i-1][j-1]:0);
                    if(sum<=threshold)
                        return k;
                }
            }
        }
        return 0;
    }
};