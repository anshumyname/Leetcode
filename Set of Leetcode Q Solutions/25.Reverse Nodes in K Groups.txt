/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(!head) return head;
        
        ListNode* prev=NULL;
        ListNode* cur=head;
        ListNode* nex=NULL;
        int x=0;
        ListNode* t=head;
        while(x<k && t){
            t=t->next;
            x++;
        }
        
        if(x<k) return head;
        ListNode* prevhead=head;
        
        while(cur && x){
            nex=cur->next;
            cur->next=prev;
            prev=cur;
            cur=nex;
            x--;
        }
        prevhead->next=reverseKGroup(nex,k);
        return prev;
    }
};