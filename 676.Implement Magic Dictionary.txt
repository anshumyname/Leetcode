class MagicDictionary {
public:
    /** Initialize your data structure here. */
    vector<string> d;
    MagicDictionary() {
        
    }
    
    /** Build a dictionary through a list of words */
    void buildDict(vector<string> dict) {
        d=dict;
    }
    
    /** Returns if there is any word in the trie that equals to the given word after modifying exactly one character */
    bool search(string word) {
        for(auto w: d){
            if(w.length()!=word.length()) continue;
            int k=w.length();
            int unsame=0;
            for(int i=0;i<k;i++){
                if(unsame>1) break;
                if(w[i]!=word[i])
                    unsame++;
            }
            if(unsame==1) return true;
        }
        return false;
    }
};

/**
 * Your MagicDictionary object will be instantiated and called as such:
 * MagicDictionary* obj = new MagicDictionary();
 * obj->buildDict(dict);
 * bool param_2 = obj->search(word);
 */