class Solution {
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        if(!nums.size()) return 0;
        sort(nums.begin(),nums.end());
        int l=1;
        int h=1e6+1;
        while(l<h){
            int m=l+(h-l)/2;
            int ans=calc(nums,m);
            if(ans>threshold)
                l=m+1;
            else
                h=m;
        }
        
        int ans1=calc(nums,l-1);
        int ans2=calc(nums,l);
        int ans3=calc(nums,l+1);
        int ans4=calc(nums,l+2);
        int ans=l;
        
        
        if(ans1<=threshold)
            ans=l-1;
        else if(ans2<=threshold)
            ans=l;
        else if(ans3<=threshold)
            ans=l+1;
        else if(ans4<=threshold)
            ans=l+2;
            
        return ans;
    }
    
    int calc(vector<int>& nums, int d){
        if(d<=0) return INT_MAX;
        int sum=0;
        for(auto e: nums){
            //cout<<ceil((e+0.0)/d)<<endl;
            sum+=(ceil((e+0.0)/d));
        }
        return sum;
    }
};