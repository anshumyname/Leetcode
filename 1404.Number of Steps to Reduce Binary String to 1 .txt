class Solution {
public:
    int numSteps(string s) {
           int c=0;
        for(int i=0;i<s.length();i++){
            if(s[i]=='0')
                c++;
        }
        
        if(c==s.length()-1 && s[s.length()-1]=='1') return 0;
            if(s[s.length()-1]=='1')
                s=add(s,"1");
            else
                s="0"+s.substr(0,s.length()-1);
        cout<<s<<endl;
        return 1+numSteps(s);
        
    }
    
    string add(string a, string b) 
    { 
    string result = ""; 
    
    int s = 0;          
    int i = a.size() - 1, j = b.size() - 1; 
    while (i >= 0 || j >= 0 || s == 1) 
    { 
        s += ((i >= 0)? a[i] - '0': 0); 
        s += ((j >= 0)? b[j] - '0': 0); 
        result = char(s % 2 + '0') + result; 
        s /= 2; 
        i--; j--; 
    } 
    return result; 
    }
};